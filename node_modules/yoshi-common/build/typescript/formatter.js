"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatTypescriptError = void 0;
// @ts-ignore
const typescriptFormatter_1 = __importDefault(require("react-dev-utils/typescriptFormatter"));
const chalk_1 = __importDefault(require("chalk"));
function formatTypescriptError(errorString) {
    const match = errorString.match(/(.+\.tsx?)\((\d+),(\d+)\): (\w+) TS(\d+): (.*)/);
    if (!match) {
        return errorString;
    }
    const [, fileName, line, column, severity, code, message] = match;
    const errorInfo = {
        type: 'diagnostic',
        severity: severity === 'error' ? 'error' : 'warning',
        file: fileName,
        line: Number(line),
        character: Number(column),
        content: message,
        code: Number(code),
        isWarningSeverity: () => false,
    };
    const errorLocation = chalk_1.default.underline(`${fileName}(${line},${column})`);
    return errorLocation + `\n` + typescriptFormatter_1.default(errorInfo, true);
}
exports.formatTypescriptError = formatTypescriptError;
//# sourceMappingURL=formatter.js.map