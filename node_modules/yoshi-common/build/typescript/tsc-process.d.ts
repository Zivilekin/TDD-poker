/// <reference types="node" />
import { EventEmitter } from 'events';
export declare type TscProcessEvent = {
    type: 'compiling';
} | {
    type: 'compile-with-errors';
    errors: Array<string>;
} | {
    type: 'compile-successfully';
} | {
    type: 'error';
    error: string;
};
export declare class TypeError extends Error {
    errors: Array<string>;
    constructor(errors: Array<string>);
}
export default class TscProcess extends EventEmitter {
    copyFiles: boolean;
    cwd: string;
    constructor({ copyFiles, cwd, }: {
        copyFiles?: boolean;
        cwd?: string;
    });
    build(): Promise<unknown>;
    watch(): void;
}
//# sourceMappingURL=tsc-process.d.ts.map