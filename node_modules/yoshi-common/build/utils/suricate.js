"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDevServerSocketPath = exports.createDevServerSocket = exports.getDevServerUrl = exports.getUrl = exports.createSocket = void 0;
const url_1 = __importDefault(require("url"));
const parse_git_config_1 = __importDefault(require("parse-git-config"));
const getPathname = (stringUrl) => url_1.default.parse(stringUrl).pathname;
const suricateURL = 'https://bo.wix.com/suricate';
const WIX_EMAIL_PATTERN = '@wix.com';
const getTunnelId = (namespace) => {
    const gitConfig = parse_git_config_1.default.sync({ include: true, type: 'global' });
    const gitEmail = gitConfig.user ? gitConfig.user.email : '';
    const processUser = process.env.USER;
    let uniqueTunnelId;
    if (process.env.SURICATE_TUNNEL_ID) {
        uniqueTunnelId = process.env.SURICATE_TUNNEL_ID;
    }
    else if (gitEmail.endsWith(WIX_EMAIL_PATTERN)) {
        uniqueTunnelId = gitEmail.replace(WIX_EMAIL_PATTERN, '');
    }
    else if (processUser) {
        uniqueTunnelId = processUser;
    }
    else {
        return undefined;
    }
    const normalizedNamespace = namespace.replace('/', '-').replace('@', '_');
    return `${uniqueTunnelId}.${normalizedNamespace}`;
};
exports.createSocket = (namespace, targetPort, options = {}) => {
    // The consumer project needs to install @wix/suricate-client > 0.0.3
    // by itself because this is a private dependency
    // eslint-disable-next-line import/no-unresolved
    const { socket } = require('@wix/suricate-client'); // eslint-disable-line import/no-extraneous-dependencies
    return socket(Object.assign({ target: { port: targetPort }, url: suricateURL, tunnelID: getTunnelId(namespace) }, options));
};
exports.getUrl = (namespace) => `${suricateURL}/tunnel/${getTunnelId(namespace)}/`;
exports.getDevServerUrl = (appName) => exports.getUrl(`${appName}-dev-server`);
exports.createDevServerSocket = (appName, port, options = {}) => exports.createSocket(`${appName}-dev-server`, port, options);
exports.getDevServerSocketPath = (appName) => {
    const devServerUrl = exports.getDevServerUrl(appName);
    return `${devServerUrl}?&sockPath=${getPathname(devServerUrl)}sockjs-node`;
};
//# sourceMappingURL=suricate.js.map