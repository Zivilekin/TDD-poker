"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const yoshi_config_1 = __importDefault(require("yoshi-config"));
// accepts a file path and return true if it needs to be transpiled
exports.default = (fileName) => {
    const allSourcesButExternalModules = (filePath) => {
        filePath = path_1.default.normalize(filePath);
        return (filePath.startsWith(process.cwd()) && !filePath.includes('node_modules'));
    };
    // Hacky until `editor-elements`' build is ready
    const isEditorElements = (filePath) => {
        return (yoshi_config_1.default.name === 'thunderbolt' && filePath.includes('editor-elements'));
    };
    const isWixStyleReactSource = (filePath) => {
        return filePath.includes('node_modules/wix-style-react/src');
    };
    const externalRegexList = yoshi_config_1.default.externalUnprocessedModules.map(m => new RegExp(`node_modules/${m}`));
    const isFlowEditorEntryPoint = (filePath) => {
        return filePath.includes('yoshi-flow-editor/.custom-entries');
    };
    return (externalRegexList.some(regex => regex.test(fileName)) ||
        allSourcesButExternalModules(fileName) ||
        isWixStyleReactSource(fileName) ||
        isFlowEditorEntryPoint(fileName) ||
        isEditorElements(fileName));
};
//# sourceMappingURL=should-transpile-file.js.map