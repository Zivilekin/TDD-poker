"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const lodash_1 = __importDefault(require("lodash"));
const loader_utils_1 = __importDefault(require("loader-utils"));
const loader = function (source) {
    // Get templating options
    const options = this.query !== '' ? loader_utils_1.default.getOptions(this) : {};
    const force = options.force || false;
    const allLoadersButThisOne = this.loaders.filter(function (loader) {
        return loader.normal !== module.exports;
    });
    // This loader shouldn't kick in if there is any other loader (unless it's explicitly enforced)
    if (allLoadersButThisOne.length > 0 && !force) {
        return source;
    }
    // Skip .js files (unless it's explicitly enforced)
    if (/\.js$/.test(this.resourcePath) && !force) {
        return source;
    }
    // The following part renders the template with lodash as a minimalistic loader
    //
    const template = lodash_1.default.template(source, lodash_1.default.defaults(options, {
        escape: /{%-([\s\S]+?)%}/g,
        evaluate: /{%([\s\S]+?)%}/g,
        interpolate: /{%=([\s\S]+?)%}/g,
        variable: 'data',
    }));
    // Use __non_webpack_require__ to enforce using the native nodejs require
    // during template execution
    return ('var _ = __non_webpack_require__(' +
        JSON.stringify(require.resolve('lodash')) +
        ');' +
        'module.exports = function (templateParams) { with(templateParams) {' +
        // Execute the lodash template
        'return (' +
        template.source +
        ')();' +
        '}}');
};
module.exports = loader;
//# sourceMappingURL=lodash-template-loader.js.map