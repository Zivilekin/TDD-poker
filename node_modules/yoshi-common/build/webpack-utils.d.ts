/// <reference types="webpack-dev-server" />
import webpack from 'webpack';
declare function createCompiler(webpackConfig: Array<webpack.Configuration>): webpack.MultiCompiler;
declare function addEntry(entry: string | Array<string> | webpack.Entry | webpack.EntryFunc, hotEntries: Array<string>): string | Array<string> | webpack.Entry | webpack.EntryFunc;
declare function overrideRules(rules: Array<webpack.Rule>, patch: (rule: webpack.Rule) => webpack.Rule): Array<webpack.Rule>;
declare function waitForCompilation(compiler: webpack.Compiler): Promise<unknown>;
declare function createServerEntries(context: string, cwd?: string): Record<string, string>;
declare function watchDynamicEntries(watching: webpack.Watching, cwd?: string): void;
declare function validateServerEntry({ cwd, extensions, yoshiServer, }: {
    cwd?: string;
    extensions: Array<string>;
    yoshiServer: boolean;
}): string | undefined;
declare function calculatePublicPath({ suricate, appName, devServerUrl, useUnversionedBaseUrl, }: {
    devServerUrl: string;
    suricate: boolean;
    appName: string;
    useUnversionedBaseUrl: boolean;
}): string;
declare function runWebpack(configs: Array<webpack.Configuration | undefined>): Promise<webpack.compilation.MultiStats>;
export { runWebpack, createCompiler, waitForCompilation, addEntry, overrideRules, createServerEntries, watchDynamicEntries, validateServerEntry, calculatePublicPath, };
//# sourceMappingURL=webpack-utils.d.ts.map