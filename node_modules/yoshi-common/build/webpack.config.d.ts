/// <reference types="webpack-dev-server" />
import webpack, { ExternalsElement, RuleSetCondition } from 'webpack';
export declare type CompilationTarget = 'web' | 'node' | 'webworker' | 'async-webworker';
export declare const getStyleLoaders: ({ name, embedCss, isDev, isHot, cssModules, experimentalRtlCss, separateCss, tpaStyle, useAbsoluteUrlsForCssAssets, }: {
    name: string;
    embedCss?: boolean | undefined;
    isDev?: boolean | undefined;
    isHot?: boolean | undefined;
    cssModules?: boolean | undefined;
    experimentalRtlCss?: boolean | undefined;
    separateCss?: boolean | undefined;
    tpaStyle?: boolean | undefined;
    useAbsoluteUrlsForCssAssets?: boolean | undefined;
}) => Array<webpack.Rule>;
export declare function createBaseWebpackConfig({ configName, name, target, isDev, isHot, useTypeScript, typeCheckTypeScript, useAngular, separateCss, keepFunctionNames, suricate, isMonorepo, separateStylableCss, experimentalRtlCss, cssModules, cwd, devServerUrl, externalizeRelativeLodash, isAnalyze, createEjsTemplates, performanceBudget, includeStyleLoaders, includeInTranspilation, enhancedTpaStyle, tpaStyle, forceEmitSourceMaps, exportAsLibraryName, nodeExternalsWhitelist, useAssetRelocator, useYoshiServer, useProgressBar, createWorkerManifest, useCustomSourceMapPlugin, forceEmitStats, forceMinimizeServer, useAbsoluteUrlsForCssAssets, serverExternals, umdNamedDefine, transpileCarmiOutput, }: {
    name: string;
    configName: 'client' | 'server' | 'web-worker' | 'site-assets' | 'web-worker-server';
    target: CompilationTarget;
    isDev?: boolean;
    isHot?: boolean;
    useTypeScript?: boolean;
    typeCheckTypeScript?: boolean;
    useAngular?: boolean;
    separateCss?: boolean;
    keepFunctionNames?: boolean;
    suricate?: boolean;
    isMonorepo?: boolean;
    separateStylableCss?: boolean;
    experimentalRtlCss?: boolean;
    cssModules?: boolean;
    cwd?: string;
    includeInTranspilation?: Array<RuleSetCondition> | RuleSetCondition;
    devServerUrl: string;
    externalizeRelativeLodash?: boolean;
    isAnalyze?: boolean;
    createEjsTemplates?: boolean;
    performanceBudget?: webpack.PerformanceOptions;
    includeStyleLoaders?: boolean;
    enhancedTpaStyle?: boolean;
    tpaStyle?: boolean;
    forceEmitSourceMaps?: boolean;
    exportAsLibraryName?: string;
    nodeExternalsWhitelist?: Array<RegExp>;
    useAssetRelocator?: boolean;
    useYoshiServer?: boolean;
    useProgressBar?: boolean;
    createWorkerManifest?: boolean;
    useCustomSourceMapPlugin?: boolean;
    forceEmitStats?: boolean;
    forceMinimizeServer?: boolean;
    useAbsoluteUrlsForCssAssets?: boolean;
    serverExternals?: ExternalsElement | Array<ExternalsElement>;
    umdNamedDefine?: boolean;
    transpileCarmiOutput?: boolean;
}): webpack.Configuration;
//# sourceMappingURL=webpack.config.d.ts.map