/// <reference types="webpack-dev-server" />
import webpack from 'webpack';
import { Config } from 'yoshi-config/build/config';
import { PackageGraphNode } from './load-package-graph';
export declare function createClientWebpackConfig(rootConfig: Config, pkg: PackageGraphNode, libs: Array<PackageGraphNode>, apps: Array<PackageGraphNode>, { isDev, isHot, suricate, isAnalyze, forceEmitSourceMaps, forceEmitStats, }?: {
    isDev?: boolean;
    isHot?: boolean;
    suricate?: boolean;
    isAnalyze?: boolean;
    forceEmitSourceMaps?: boolean;
    forceEmitStats?: boolean;
}): webpack.Configuration;
export declare function createServerWebpackConfig(rootConfig: Config, pkg: PackageGraphNode, libs: Array<PackageGraphNode>, apps: Array<PackageGraphNode>, { isDev, isHot }?: {
    isDev?: boolean;
    isHot?: boolean;
}): webpack.Configuration;
export declare function createWebWorkerWebpackConfig(rootConfig: Config, pkg: PackageGraphNode, libs: Array<PackageGraphNode>, apps: Array<PackageGraphNode>, { isDev, isHot, isAnalyze, forceEmitStats, }?: {
    isDev?: boolean;
    isHot?: boolean;
    isAnalyze?: boolean;
    forceEmitStats?: boolean;
}): webpack.Configuration;
export declare function createWebWorkerServerWebpackConfig(rootConfig: Config, pkg: PackageGraphNode, libs: Array<PackageGraphNode>, apps: Array<PackageGraphNode>, { isDev, isHot }?: {
    isDev?: boolean;
    isHot?: boolean;
}): webpack.Configuration;
export declare function createSiteAssetsWebpackConfig(rootConfig: Config, pkg: PackageGraphNode, libs: Array<PackageGraphNode>, apps: Array<PackageGraphNode>, { isDev, forceEmitSourceMaps, forceEmitStats, isAnalyze, target, transpileCarmiOutput, }: {
    isDev?: boolean;
    forceEmitSourceMaps?: boolean;
    forceEmitStats?: boolean;
    isAnalyze?: boolean;
    target: 'web' | 'node';
    transpileCarmiOutput?: boolean;
}): webpack.Configuration;
//# sourceMappingURL=webpack.config.d.ts.map