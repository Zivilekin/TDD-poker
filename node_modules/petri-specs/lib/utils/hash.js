const CACHE_FILE_NAME = '.perti-spces-hashes';
const { readFileSync, writeFileSync, existsSync } = require('fs');
const { join } = require('path');
const stringHash = require('string-hash');

const hashSpec = spec => stringHash(JSON.stringify(spec));


const cacheFilePath = specsPath => join(specsPath, CACHE_FILE_NAME);

function clean(specsPath) {
    writeFileSync(cacheFilePath(specsPath), '{}');
}

function get(specsPath) {
    if (!existsSync(cacheFilePath(specsPath))) {
        clean(specsPath);
        return {};
    }
    return JSON.parse(
        readFileSync(cacheFilePath(specsPath), {
            encoding: 'utf8'
        })
    );
}

function getModifiedSpecs(hashes, specs) {
    return specs.filter(spec => {
        return !hashes[spec.key] || hashSpec(spec) !== hashes[spec.key];
    });
}

function updateHashes(hashes, specs, specsPath) {
    specs.forEach(spec => {
        hashes[spec.key] = hashSpec(spec);
    })
    writeFileSync(cacheFilePath(specsPath), JSON.stringify(hashes));
}

module.exports = {
    clean,
    get,
    getModifiedSpecs,
    updateHashes,
}
