"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs = __importStar(require("fs"));
const resolve_namespace_1 = require("./resolve-namespace");
const stylable_module_factory_1 = require("./stylable-module-factory");
const HOOK_EXTENSION = '.css';
const defaultStylableMatcher = (filename) => !!filename.match(/\.st\.css$/);
function attachHook({ matcher, afterCompile, stylableConfig, runtimePath } = {}) {
    const stylableToModule = stylable_module_factory_1.stylableModuleFactory(Object.assign({ projectRoot: 'root', fileSystem: fs, requireModule: require, resolveNamespace: resolve_namespace_1.resolveNamespace }, stylableConfig), runtimePath);
    if (!matcher) {
        matcher = defaultStylableMatcher;
    }
    const prevHook = require.extensions[HOOK_EXTENSION];
    require.extensions[HOOK_EXTENSION] = function cssModulesHook(m, filename) {
        if (matcher(filename) || !prevHook) {
            const source = fs.readFileSync(filename).toString();
            const code = stylableToModule(source, filename);
            return m._compile(afterCompile ? afterCompile(code, filename) : code, filename);
        }
        else if (prevHook) {
            return prevHook(m, filename);
        }
        else {
            throw new Error(`Failed to load file: ${filename}. Could not find require extension for .css`);
        }
    };
}
exports.attachHook = attachHook;
//# sourceMappingURL=require-hook.js.map