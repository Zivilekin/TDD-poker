"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function timedCache(fn, _a) {
    var timeout = _a.timeout, useTimer = _a.useTimer, createKey = _a.createKey;
    var cache = new Map();
    var prevTime = Infinity;
    var shouldClean = false;
    var get = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (!shouldClean && useTimer) {
            setTimeout(function () {
                shouldClean = false;
                cache.clear();
            }, timeout);
        }
        shouldClean = true;
        var current = Date.now();
        if (current - prevTime > timeout && !useTimer) {
            cache.clear();
        }
        prevTime = current;
        var key = createKey(args);
        var value;
        if (!cache.has(key)) {
            value = fn.apply(void 0, args);
            cache.set(key, value);
        }
        else {
            value = cache.get(key);
        }
        return value;
    };
    return {
        get: get,
        cache: cache
    };
}
exports.timedCache = timedCache;
//# sourceMappingURL=timed-cache.js.map