import * as postcss from 'postcss';
import { Diagnostics } from './diagnostics';
import { SelectorAstNode } from './selector-utils';
import { StateResult } from './state-validators';
import { ClassSymbol, ElementSymbol, StylableMeta, StylableSymbol } from './stylable-processor';
import { StylableResolver } from './stylable-resolver';
import { MappedStates } from './stylable-value-parsers';
import { StateParsedValue } from './types';
export declare const stateErrors: {
    UNKNOWN_STATE_USAGE: (name: string) => string;
    UNKNOWN_STATE_TYPE: (name: string, type: string) => string;
    TOO_MANY_STATE_TYPES: (name: string, types: string[]) => string;
    NO_STATE_TYPE_GIVEN: (name: string) => string;
    TOO_MANY_ARGS_IN_VALIDATOR: (name: string, validator: string, args: string[]) => string;
    STATE_VARIABLE_NAME_CLASH: (name: string) => string;
};
export declare function processPseudoStates(value: string, decl: postcss.Declaration, diagnostics: Diagnostics): MappedStates;
export declare function validateStateDefinition(decl: postcss.Declaration, meta: StylableMeta, resolver: StylableResolver, diagnostics: Diagnostics): void;
export declare function validateStateArgument(stateAst: StateParsedValue, meta: StylableMeta, value: string, resolver: StylableResolver, diagnostics: Diagnostics, rule?: postcss.Rule, validateDefinition?: boolean, validateValue?: boolean): StateResult;
export declare function transformPseudoStateSelector(meta: StylableMeta, node: SelectorAstNode, name: string, symbol: StylableSymbol | null, origin: StylableMeta, originSymbol: ClassSymbol | ElementSymbol, resolver: StylableResolver, diagnostics: Diagnostics, rule?: postcss.Rule): StylableMeta;
export declare function setStateToNode(states: MappedStates, meta: StylableMeta, name: string, node: SelectorAstNode, namespace: string, resolver: StylableResolver, diagnostics: Diagnostics, rule?: postcss.Rule): void;
export declare function autoStateAttrName(stateName: string, namespace: string, suffix?: string): string;
//# sourceMappingURL=pseudo-states.d.ts.map