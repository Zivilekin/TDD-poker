"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const chalk_1 = __importDefault(require("chalk"));
const import_fresh_1 = __importDefault(require("import-fresh"));
const jest_validate_1 = require("jest-validate");
const validConfig_1 = __importDefault(require("./validConfig"));
exports.default = () => {
    const configPath = path_1.default.join(process.cwd(), 'jest-yoshi.config.js');
    // use default config
    if (!fs_1.default.existsSync(configPath)) {
        return {};
    }
    let config;
    try {
        config = import_fresh_1.default(configPath);
    }
    catch (error) {
        error.message = `Config ${chalk_1.default.bold(configPath)} is invalid:\n  ${error.message}`;
        throw error;
    }
    jest_validate_1.validate(config, {
        exampleConfig: validConfig_1.default,
        recursiveBlacklist: [
            'puppeteer',
            'specOptions.globals',
            'specOptions.moduleNameMapper',
            'e2eOptions.moduleNameMapper',
            'coverageThreshold',
        ],
    });
    return config;
};
//# sourceMappingURL=index.js.map