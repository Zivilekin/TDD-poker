"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getServerStartFile = void 0;
const path_1 = __importDefault(require("path"));
const chalk_1 = __importDefault(require("chalk"));
const queries_1 = require("./queries");
const serverStartFileOrder = [
    'dev/server.ts',
    'dev/server.js',
    'index-dev.ts',
    'index-dev.js',
    'index.ts',
    'index.js',
];
exports.getServerStartFile = ({ serverStartFileCLI, cwd = process.cwd(), }) => {
    const extension = queries_1.isTypescriptProject() ? 'ts' : 'js';
    if (serverStartFileCLI) {
        console.log(chalk_1.default.yellow(`Deprecation warning: --server and --entry-point is going to be removed in Yoshi v5.
Please remove the flags and use these default entry points:
  - fullstack: index-dev.${extension}
  - client:    dev/server.${extension}`));
        return serverStartFileCLI;
    }
    const serverStartFile = serverStartFileOrder
        .map(filePath => path_1.default.join(cwd, filePath))
        .find(queries_1.existsSync);
    if (!serverStartFile) {
        throw new Error(`Entry point is missing! Please create the entry point:
  - fullstack: index-dev.${extension}
  - client:    dev/server.${extension}`);
    }
    if (path_1.default.basename(serverStartFile).split('.')[0] === 'index') {
        console.log(chalk_1.default.yellow(`Deprecation warning: ${path_1.default.basename(serverStartFile)} is not going to be started automatically in Yoshi v5. Please create the entry poiont:
  - fullstack: index-dev.${extension}
  - client:    dev/server.${extension}`));
    }
    return serverStartFile;
};
//# sourceMappingURL=server-start-file.js.map