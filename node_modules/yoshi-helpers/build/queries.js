"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isWebWorkerBundle = exports.shouldDeployToCDN = exports.hasBundleInStaticsDir = exports.hasProtractorConfigFile = exports.hasE2ETests = exports.shouldRunLess = exports.shouldExportModule = exports.isUsingTSLint = exports.isTypescriptProject = exports.shouldRunSass = exports.shouldRunWebpack = exports.isProduction = exports.inPRTeamCity = exports.inTeamCity = exports.watchMode = exports.isSingleEntry = exports.existsSync = exports.exists = void 0;
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("fs"));
const globby_1 = __importDefault(require("globby"));
const yoshi_config_1 = __importDefault(require("yoshi-config"));
const globs = __importStar(require("yoshi-config/build/globs"));
const paths_1 = require("yoshi-config/build/paths");
const is_ci_1 = __importDefault(require("is-ci"));
const constants_1 = require("./constants");
exports.exists = (patterns, options) => {
    return globby_1.default.sync(patterns, options).length > 0;
};
exports.existsSync = (file) => {
    return fs_1.default.existsSync(file);
};
exports.isSingleEntry = (entry) => typeof entry === 'string' || Array.isArray(entry);
exports.watchMode = () => {
    return !!process.env.WIX_NODE_BUILD_WATCH_MODE;
};
exports.inTeamCity = () => {
    return !!(process.env.BUILD_NUMBER || process.env.TEAMCITY_VERSION);
};
exports.inPRTeamCity = () => {
    return exports.inTeamCity() && process.env.agentType === 'pullrequest';
};
exports.isProduction = () => (process.env.NODE_ENV || '').toLowerCase() === 'production';
exports.shouldRunWebpack = (webpackConfig) => {
    const defaultEntryPath = path_1.default.join(webpackConfig.context, constants_1.defaultEntry);
    return (yoshi_config_1.default.entry ||
        exports.exists(`${defaultEntryPath}.{js,jsx,ts,tsx}`));
};
exports.shouldRunSass = () => {
    return (globby_1.default.sync(globs.scss).filter(file => path_1.default.basename(file)[0] !== '_')
        .length > 0);
};
exports.isTypescriptProject = () => fs_1.default.existsSync(path_1.default.resolve('tsconfig.json'));
exports.isUsingTSLint = () => exports.exists('tslint.*');
exports.shouldExportModule = () => {
    return !!yoshi_config_1.default.pkgJson.module;
};
exports.shouldRunLess = () => {
    return exports.exists(globs.less);
};
exports.hasE2ETests = (cwd = process.cwd()) => {
    return exports.exists(globs.e2eTests, { gitignore: true, cwd });
};
exports.hasProtractorConfigFile = () => {
    return exports.exists(path_1.default.resolve('protractor.conf.js'));
};
exports.hasBundleInStaticsDir = (cwd = process.cwd()) => {
    return (globby_1.default.sync(path_1.default.resolve(globs.statics, '*.bundle.js'), { cwd }).length > 0);
};
exports.shouldDeployToCDN = () => {
    return (is_ci_1.default &&
        (process.env.ARTIFACT_VERSION || process.env.SRC_MD5) &&
        fs_1.default.existsSync(paths_1.POM_FILE));
};
exports.isWebWorkerBundle = !!yoshi_config_1.default.webWorkerEntry;
//# sourceMappingURL=queries.js.map